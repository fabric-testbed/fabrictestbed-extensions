[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fabrictestbed-fablib"
version = "1.5.1"
description = "FABRIC Python Client Library and CLI Extensions"
authors = [
    {name="Paul Ruth", email="pruth@renci.org"},
    {name="Komal Thareja", email="kthare10@renci.org"}
    ]

readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE" }
requires-python = ">=3.9"
dependencies = [
    "ipycytoscape",
    "ipywidgets",
    "ipyleaflet",
    "ipycytoscape",
    "tabulate",
    "fabrictestbed==1.5.3",
    "paramiko",
    "jinja2>=3.0.0",
    "pandas",
    "numpy",
    "ipython>=8.12.0"
    ]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    ]

[project.urls]
Homepage = "https://fabric-testbed.net/"
Sources = "https://github.com/fabric-testbed/fabrictestbed-extensions"
Documentation = "https://fabric-fablib.readthedocs.io/"
ChangeLog = "https://github.com/fabric-testbed/fabrictestbed-extensions/blob/main/CHANGELOG.md"

[project.optional-dependencies]
doc = ["sphinx", "furo"]
test = [
    "black==23.*",
    "isort==5.*",
    "tox==4.*",
    "pytest",
    "coverage[toml]"
    ]

[tool.coverage.run]
branch = true
omit = [ "fabrictestbed_extensions/tests/*" ]

[tool.black]
src_paths = ["src", "docs/source/conf.py", "tests"]

[tool.isort]
profile = "black"
src_paths = ["src", "docs/source/conf.py", "tests"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
# By default, run only unit tests when pytest is invoked.  Integration
# tests will require some manual setup (namely token acquisition), and
# thus we can't run them on CI.
testpaths = [
    "tests/unit/",
]
